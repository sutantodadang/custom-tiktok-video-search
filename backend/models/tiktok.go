package models

import (
	"encoding/json"
	"tiktok-video-search/common/caches"
	"tiktok-video-search/common/constants"
	"time"

	"github.com/rs/zerolog/log"
)

type AutoGenerated struct {
	StatusCode int `json:"status_code"`
	Data       []struct {
		Type int `json:"type"`
		Item struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				DownloadAddr  string   `json:"downloadAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Challenges []struct {
				ID            string `json:"id"`
				Title         string `json:"title"`
				Desc          string `json:"desc"`
				ProfileThumb  string `json:"profileThumb"`
				ProfileMedium string `json:"profileMedium"`
				ProfileLarger string `json:"profileLarger"`
				CoverThumb    string `json:"coverThumb"`
				CoverMedium   string `json:"coverMedium"`
				CoverLarger   string `json:"coverLarger"`
				IsCommerce    bool   `json:"isCommerce"`
			} `json:"challenges"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
			DuetInfo struct {
				DuetFromID string `json:"duetFromId"`
			} `json:"duetInfo"`
			OriginalItem bool `json:"originalItem"`
			OfficalItem  bool `json:"officalItem"`
			TextExtra    []struct {
				AwemeID      string `json:"awemeId"`
				Start        int    `json:"start"`
				End          int    `json:"end"`
				HashtagName  string `json:"hashtagName"`
				HashtagID    string `json:"hashtagId"`
				Type         int    `json:"type"`
				UserID       string `json:"userId"`
				IsCommerce   bool   `json:"isCommerce"`
				UserUniqueID string `json:"userUniqueId"`
				SecUID       string `json:"secUid"`
				SubType      int    `json:"subType"`
			} `json:"textExtra"`
			Secret            bool `json:"secret"`
			ForFriend         bool `json:"forFriend"`
			Digged            bool `json:"digged"`
			ItemCommentStatus int  `json:"itemCommentStatus"`
			ShowNotPass       bool `json:"showNotPass"`
			Vl1               bool `json:"vl1"`
			ItemMute          bool `json:"itemMute"`
			AuthorStats       struct {
				FollowingCount int `json:"followingCount"`
				FollowerCount  int `json:"followerCount"`
				HeartCount     int `json:"heartCount"`
				VideoCount     int `json:"videoCount"`
				DiggCount      int `json:"diggCount"`
				Heart          int `json:"heart"`
			} `json:"authorStats"`
			PrivateItem           bool `json:"privateItem"`
			DuetEnabled           bool `json:"duetEnabled"`
			StitchEnabled         bool `json:"stitchEnabled"`
			ShareEnabled          bool `json:"shareEnabled"`
			IsAd                  bool `json:"isAd"`
			Collected             bool `json:"collected"`
			VideoSuggestWordsList struct {
				VideoSuggestWordsStruct []struct {
					Words []struct {
						Word   string `json:"word"`
						WordID string `json:"word_id"`
					} `json:"words"`
					Scene    string `json:"scene"`
					HintText string `json:"hint_text"`
				} `json:"video_suggest_words_struct"`
			} `json:"videoSuggestWordsList"`
		} `json:"item,omitempty"`
		Common struct {
			DocIDStr string `json:"doc_id_str"`
		} `json:"common"`
		UserList []struct {
			UserInfo struct {
				UID         string `json:"uid"`
				Nickname    string `json:"nickname"`
				Signature   string `json:"signature"`
				AvatarThumb struct {
					URI       string   `json:"uri"`
					URLList   []string `json:"url_list"`
					Width     int      `json:"width"`
					Height    int      `json:"height"`
					URLPrefix any      `json:"url_prefix"`
				} `json:"avatar_thumb"`
				FollowStatus               int    `json:"follow_status"`
				FollowerCount              int    `json:"follower_count"`
				CustomVerify               string `json:"custom_verify"`
				UniqueID                   string `json:"unique_id"`
				RoomID                     int    `json:"room_id"`
				EnterpriseVerifyReason     string `json:"enterprise_verify_reason"`
				FollowersDetail            any    `json:"followers_detail"`
				PlatformSyncInfo           any    `json:"platform_sync_info"`
				Geofencing                 any    `json:"geofencing"`
				CoverURL                   any    `json:"cover_url"`
				ItemList                   any    `json:"item_list"`
				TypeLabel                  any    `json:"type_label"`
				AdCoverURL                 any    `json:"ad_cover_url"`
				RelativeUsers              any    `json:"relative_users"`
				ChaList                    any    `json:"cha_list"`
				SecUID                     string `json:"sec_uid"`
				NeedPoints                 any    `json:"need_points"`
				HomepageBottomToast        any    `json:"homepage_bottom_toast"`
				CanSetGeofencing           any    `json:"can_set_geofencing"`
				WhiteCoverURL              any    `json:"white_cover_url"`
				UserTags                   any    `json:"user_tags"`
				BoldFields                 any    `json:"bold_fields"`
				SearchHighlight            any    `json:"search_highlight"`
				MutualRelationAvatars      any    `json:"mutual_relation_avatars"`
				RoomIDStr                  string `json:"room_id_str"`
				Events                     any    `json:"events"`
				AdvanceFeatureItemOrder    any    `json:"advance_feature_item_order"`
				AdvancedFeatureInfo        any    `json:"advanced_feature_info"`
				UserProfileGuide           any    `json:"user_profile_guide"`
				ShieldEditFieldInfo        any    `json:"shield_edit_field_info"`
				CanMessageFollowStatusList any    `json:"can_message_follow_status_list"`
				AccountLabels              any    `json:"account_labels"`
			} `json:"user_info"`
			Position       any `json:"position"`
			UniqidPosition any `json:"uniqid_position"`
			Effects        any `json:"effects"`
			Musics         any `json:"musics"`
			Items          any `json:"items"`
			MixList        any `json:"mix_list"`
			Challenges     any `json:"challenges"`
		} `json:"user_list,omitempty"`
		HasTopUser int    `json:"has_top_user,omitempty"`
		ViewMore   bool   `json:"view_more,omitempty"`
		CardTitle  string `json:"card_title,omitempty"`
		Item0      struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				DownloadAddr  string   `json:"downloadAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Challenges []struct {
				ID            string `json:"id"`
				Title         string `json:"title"`
				Desc          string `json:"desc"`
				ProfileThumb  string `json:"profileThumb"`
				ProfileMedium string `json:"profileMedium"`
				ProfileLarger string `json:"profileLarger"`
				CoverThumb    string `json:"coverThumb"`
				CoverMedium   string `json:"coverMedium"`
				CoverLarger   string `json:"coverLarger"`
				IsCommerce    bool   `json:"isCommerce"`
			} `json:"challenges"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
			DuetInfo struct {
				DuetFromID string `json:"duetFromId"`
			} `json:"duetInfo"`
			OriginalItem bool `json:"originalItem"`
			OfficalItem  bool `json:"officalItem"`
			TextExtra    []struct {
				AwemeID      string `json:"awemeId"`
				Start        int    `json:"start"`
				End          int    `json:"end"`
				HashtagName  string `json:"hashtagName"`
				HashtagID    string `json:"hashtagId"`
				Type         int    `json:"type"`
				UserID       string `json:"userId"`
				IsCommerce   bool   `json:"isCommerce"`
				UserUniqueID string `json:"userUniqueId"`
				SecUID       string `json:"secUid"`
				SubType      int    `json:"subType"`
			} `json:"textExtra"`
			Secret            bool `json:"secret"`
			ForFriend         bool `json:"forFriend"`
			Digged            bool `json:"digged"`
			ItemCommentStatus int  `json:"itemCommentStatus"`
			ShowNotPass       bool `json:"showNotPass"`
			Vl1               bool `json:"vl1"`
			ItemMute          bool `json:"itemMute"`
			AuthorStats       struct {
				FollowingCount int `json:"followingCount"`
				FollowerCount  int `json:"followerCount"`
				HeartCount     int `json:"heartCount"`
				VideoCount     int `json:"videoCount"`
				DiggCount      int `json:"diggCount"`
				Heart          int `json:"heart"`
			} `json:"authorStats"`
			PrivateItem   bool `json:"privateItem"`
			DuetEnabled   bool `json:"duetEnabled"`
			StitchEnabled bool `json:"stitchEnabled"`
			ShareEnabled  bool `json:"shareEnabled"`
			IsAd          bool `json:"isAd"`
			Collected     bool `json:"collected"`
		} `json:"item,omitempty"`
		Item1 struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				DownloadAddr  string   `json:"downloadAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Challenges []struct {
				ID            string `json:"id"`
				Title         string `json:"title"`
				Desc          string `json:"desc"`
				ProfileThumb  string `json:"profileThumb"`
				ProfileMedium string `json:"profileMedium"`
				ProfileLarger string `json:"profileLarger"`
				CoverThumb    string `json:"coverThumb"`
				CoverMedium   string `json:"coverMedium"`
				CoverLarger   string `json:"coverLarger"`
				IsCommerce    bool   `json:"isCommerce"`
			} `json:"challenges"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
			DuetInfo struct {
				DuetFromID string `json:"duetFromId"`
			} `json:"duetInfo"`
			OriginalItem bool `json:"originalItem"`
			OfficalItem  bool `json:"officalItem"`
			TextExtra    []struct {
				AwemeID      string `json:"awemeId"`
				Start        int    `json:"start"`
				End          int    `json:"end"`
				HashtagName  string `json:"hashtagName"`
				HashtagID    string `json:"hashtagId"`
				Type         int    `json:"type"`
				UserID       string `json:"userId"`
				IsCommerce   bool   `json:"isCommerce"`
				UserUniqueID string `json:"userUniqueId"`
				SecUID       string `json:"secUid"`
				SubType      int    `json:"subType"`
			} `json:"textExtra"`
			Secret            bool `json:"secret"`
			ForFriend         bool `json:"forFriend"`
			Digged            bool `json:"digged"`
			ItemCommentStatus int  `json:"itemCommentStatus"`
			ShowNotPass       bool `json:"showNotPass"`
			Vl1               bool `json:"vl1"`
			ItemMute          bool `json:"itemMute"`
			AuthorStats       struct {
				FollowingCount int `json:"followingCount"`
				FollowerCount  int `json:"followerCount"`
				HeartCount     int `json:"heartCount"`
				VideoCount     int `json:"videoCount"`
				DiggCount      int `json:"diggCount"`
				Heart          int `json:"heart"`
			} `json:"authorStats"`
			PrivateItem    bool `json:"privateItem"`
			DuetEnabled    bool `json:"duetEnabled"`
			StitchEnabled  bool `json:"stitchEnabled"`
			ShareEnabled   bool `json:"shareEnabled"`
			StickersOnItem []struct {
				StickerType int      `json:"stickerType"`
				StickerText []string `json:"stickerText"`
			} `json:"stickersOnItem"`
			IsAd                  bool `json:"isAd"`
			Collected             bool `json:"collected"`
			VideoSuggestWordsList struct {
				VideoSuggestWordsStruct []struct {
					Words []struct {
						Word   string `json:"word"`
						WordID string `json:"word_id"`
					} `json:"words"`
					Scene    string `json:"scene"`
					HintText string `json:"hint_text"`
				} `json:"video_suggest_words_struct"`
			} `json:"videoSuggestWordsList"`
		} `json:"item,omitempty"`
		Item2 struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				DownloadAddr  string   `json:"downloadAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
			DuetInfo struct {
				DuetFromID string `json:"duetFromId"`
			} `json:"duetInfo"`
			OriginalItem      bool `json:"originalItem"`
			OfficalItem       bool `json:"officalItem"`
			Secret            bool `json:"secret"`
			ForFriend         bool `json:"forFriend"`
			Digged            bool `json:"digged"`
			ItemCommentStatus int  `json:"itemCommentStatus"`
			ShowNotPass       bool `json:"showNotPass"`
			Vl1               bool `json:"vl1"`
			ItemMute          bool `json:"itemMute"`
			AuthorStats       struct {
				FollowingCount int `json:"followingCount"`
				FollowerCount  int `json:"followerCount"`
				HeartCount     int `json:"heartCount"`
				VideoCount     int `json:"videoCount"`
				DiggCount      int `json:"diggCount"`
				Heart          int `json:"heart"`
			} `json:"authorStats"`
			PrivateItem           bool `json:"privateItem"`
			DuetEnabled           bool `json:"duetEnabled"`
			StitchEnabled         bool `json:"stitchEnabled"`
			ShareEnabled          bool `json:"shareEnabled"`
			IsAd                  bool `json:"isAd"`
			Collected             bool `json:"collected"`
			VideoSuggestWordsList struct {
				VideoSuggestWordsStruct []struct {
					Words []struct {
						Word   string `json:"word"`
						WordID string `json:"word_id"`
					} `json:"words"`
					Scene    string `json:"scene"`
					HintText string `json:"hint_text"`
				} `json:"video_suggest_words_struct"`
			} `json:"videoSuggestWordsList"`
		} `json:"item,omitempty"`
		Item3 struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				DownloadAddr  string   `json:"downloadAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Challenges []struct {
				ID            string `json:"id"`
				Title         string `json:"title"`
				Desc          string `json:"desc"`
				ProfileThumb  string `json:"profileThumb"`
				ProfileMedium string `json:"profileMedium"`
				ProfileLarger string `json:"profileLarger"`
				CoverThumb    string `json:"coverThumb"`
				CoverMedium   string `json:"coverMedium"`
				CoverLarger   string `json:"coverLarger"`
				IsCommerce    bool   `json:"isCommerce"`
			} `json:"challenges"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
			DuetInfo struct {
				DuetFromID string `json:"duetFromId"`
			} `json:"duetInfo"`
			OriginalItem bool `json:"originalItem"`
			OfficalItem  bool `json:"officalItem"`
			TextExtra    []struct {
				AwemeID      string `json:"awemeId"`
				Start        int    `json:"start"`
				End          int    `json:"end"`
				HashtagName  string `json:"hashtagName"`
				HashtagID    string `json:"hashtagId"`
				Type         int    `json:"type"`
				UserID       string `json:"userId"`
				IsCommerce   bool   `json:"isCommerce"`
				UserUniqueID string `json:"userUniqueId"`
				SecUID       string `json:"secUid"`
				SubType      int    `json:"subType"`
			} `json:"textExtra"`
			Secret            bool `json:"secret"`
			ForFriend         bool `json:"forFriend"`
			Digged            bool `json:"digged"`
			ItemCommentStatus int  `json:"itemCommentStatus"`
			ShowNotPass       bool `json:"showNotPass"`
			Vl1               bool `json:"vl1"`
			ItemMute          bool `json:"itemMute"`
			AuthorStats       struct {
				FollowingCount int `json:"followingCount"`
				FollowerCount  int `json:"followerCount"`
				HeartCount     int `json:"heartCount"`
				VideoCount     int `json:"videoCount"`
				DiggCount      int `json:"diggCount"`
				Heart          int `json:"heart"`
			} `json:"authorStats"`
			PrivateItem   bool `json:"privateItem"`
			DuetEnabled   bool `json:"duetEnabled"`
			StitchEnabled bool `json:"stitchEnabled"`
			ShareEnabled  bool `json:"shareEnabled"`
			IsAd          bool `json:"isAd"`
			Collected     bool `json:"collected"`
		} `json:"item,omitempty"`
		Item4 struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				DownloadAddr  string   `json:"downloadAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Challenges []struct {
				ID            string `json:"id"`
				Title         string `json:"title"`
				Desc          string `json:"desc"`
				ProfileThumb  string `json:"profileThumb"`
				ProfileMedium string `json:"profileMedium"`
				ProfileLarger string `json:"profileLarger"`
				CoverThumb    string `json:"coverThumb"`
				CoverMedium   string `json:"coverMedium"`
				CoverLarger   string `json:"coverLarger"`
				IsCommerce    bool   `json:"isCommerce"`
			} `json:"challenges"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
			DuetInfo struct {
				DuetFromID string `json:"duetFromId"`
			} `json:"duetInfo"`
			OriginalItem bool `json:"originalItem"`
			OfficalItem  bool `json:"officalItem"`
			TextExtra    []struct {
				AwemeID      string `json:"awemeId"`
				Start        int    `json:"start"`
				End          int    `json:"end"`
				HashtagName  string `json:"hashtagName"`
				HashtagID    string `json:"hashtagId"`
				Type         int    `json:"type"`
				UserID       string `json:"userId"`
				IsCommerce   bool   `json:"isCommerce"`
				UserUniqueID string `json:"userUniqueId"`
				SecUID       string `json:"secUid"`
				SubType      int    `json:"subType"`
			} `json:"textExtra"`
			Secret            bool `json:"secret"`
			ForFriend         bool `json:"forFriend"`
			Digged            bool `json:"digged"`
			ItemCommentStatus int  `json:"itemCommentStatus"`
			ShowNotPass       bool `json:"showNotPass"`
			Vl1               bool `json:"vl1"`
			ItemMute          bool `json:"itemMute"`
			AuthorStats       struct {
				FollowingCount int `json:"followingCount"`
				FollowerCount  int `json:"followerCount"`
				HeartCount     int `json:"heartCount"`
				VideoCount     int `json:"videoCount"`
				DiggCount      int `json:"diggCount"`
				Heart          int `json:"heart"`
			} `json:"authorStats"`
			PrivateItem   bool `json:"privateItem"`
			DuetEnabled   bool `json:"duetEnabled"`
			StitchEnabled bool `json:"stitchEnabled"`
			ShareEnabled  bool `json:"shareEnabled"`
			IsAd          bool `json:"isAd"`
			Collected     bool `json:"collected"`
		} `json:"item,omitempty"`
		Item5 struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
			DuetInfo struct {
				DuetFromID string `json:"duetFromId"`
			} `json:"duetInfo"`
			OriginalItem      bool `json:"originalItem"`
			OfficalItem       bool `json:"officalItem"`
			Secret            bool `json:"secret"`
			ForFriend         bool `json:"forFriend"`
			Digged            bool `json:"digged"`
			ItemCommentStatus int  `json:"itemCommentStatus"`
			ShowNotPass       bool `json:"showNotPass"`
			Vl1               bool `json:"vl1"`
			ItemMute          bool `json:"itemMute"`
			AuthorStats       struct {
				FollowingCount int `json:"followingCount"`
				FollowerCount  int `json:"followerCount"`
				HeartCount     int `json:"heartCount"`
				VideoCount     int `json:"videoCount"`
				DiggCount      int `json:"diggCount"`
				Heart          int `json:"heart"`
			} `json:"authorStats"`
			PrivateItem   bool `json:"privateItem"`
			DuetEnabled   bool `json:"duetEnabled"`
			StitchEnabled bool `json:"stitchEnabled"`
			ShareEnabled  bool `json:"shareEnabled"`
			IsAd          bool `json:"isAd"`
			Collected     bool `json:"collected"`
		} `json:"item,omitempty"`
		Item6 struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Challenges []struct {
				ID            string `json:"id"`
				Title         string `json:"title"`
				Desc          string `json:"desc"`
				ProfileThumb  string `json:"profileThumb"`
				ProfileMedium string `json:"profileMedium"`
				ProfileLarger string `json:"profileLarger"`
				CoverThumb    string `json:"coverThumb"`
				CoverMedium   string `json:"coverMedium"`
				CoverLarger   string `json:"coverLarger"`
				IsCommerce    bool   `json:"isCommerce"`
			} `json:"challenges"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
			DuetInfo struct {
				DuetFromID string `json:"duetFromId"`
			} `json:"duetInfo"`
			OriginalItem bool `json:"originalItem"`
			OfficalItem  bool `json:"officalItem"`
			TextExtra    []struct {
				AwemeID      string `json:"awemeId"`
				Start        int    `json:"start"`
				End          int    `json:"end"`
				HashtagName  string `json:"hashtagName"`
				HashtagID    string `json:"hashtagId"`
				Type         int    `json:"type"`
				UserID       string `json:"userId"`
				IsCommerce   bool   `json:"isCommerce"`
				UserUniqueID string `json:"userUniqueId"`
				SecUID       string `json:"secUid"`
				SubType      int    `json:"subType"`
			} `json:"textExtra"`
			Secret            bool `json:"secret"`
			ForFriend         bool `json:"forFriend"`
			Digged            bool `json:"digged"`
			ItemCommentStatus int  `json:"itemCommentStatus"`
			ShowNotPass       bool `json:"showNotPass"`
			Vl1               bool `json:"vl1"`
			ItemMute          bool `json:"itemMute"`
			AuthorStats       struct {
				FollowingCount int `json:"followingCount"`
				FollowerCount  int `json:"followerCount"`
				HeartCount     int `json:"heartCount"`
				VideoCount     int `json:"videoCount"`
				DiggCount      int `json:"diggCount"`
				Heart          int `json:"heart"`
			} `json:"authorStats"`
			PrivateItem   bool `json:"privateItem"`
			DuetEnabled   bool `json:"duetEnabled"`
			StitchEnabled bool `json:"stitchEnabled"`
			ShareEnabled  bool `json:"shareEnabled"`
			IsAd          bool `json:"isAd"`
			Collected     bool `json:"collected"`
		} `json:"item,omitempty"`
		Item7 struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				DownloadAddr  string   `json:"downloadAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Challenges []struct {
				ID            string `json:"id"`
				Title         string `json:"title"`
				Desc          string `json:"desc"`
				ProfileThumb  string `json:"profileThumb"`
				ProfileMedium string `json:"profileMedium"`
				ProfileLarger string `json:"profileLarger"`
				CoverThumb    string `json:"coverThumb"`
				CoverMedium   string `json:"coverMedium"`
				CoverLarger   string `json:"coverLarger"`
				IsCommerce    bool   `json:"isCommerce"`
			} `json:"challenges"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
			DuetInfo struct {
				DuetFromID string `json:"duetFromId"`
			} `json:"duetInfo"`
			OriginalItem bool `json:"originalItem"`
			OfficalItem  bool `json:"officalItem"`
			TextExtra    []struct {
				AwemeID      string `json:"awemeId"`
				Start        int    `json:"start"`
				End          int    `json:"end"`
				HashtagName  string `json:"hashtagName"`
				HashtagID    string `json:"hashtagId"`
				Type         int    `json:"type"`
				UserID       string `json:"userId"`
				IsCommerce   bool   `json:"isCommerce"`
				UserUniqueID string `json:"userUniqueId"`
				SecUID       string `json:"secUid"`
				SubType      int    `json:"subType"`
			} `json:"textExtra"`
			Secret            bool `json:"secret"`
			ForFriend         bool `json:"forFriend"`
			Digged            bool `json:"digged"`
			ItemCommentStatus int  `json:"itemCommentStatus"`
			ShowNotPass       bool `json:"showNotPass"`
			Vl1               bool `json:"vl1"`
			ItemMute          bool `json:"itemMute"`
			AuthorStats       struct {
				FollowingCount int `json:"followingCount"`
				FollowerCount  int `json:"followerCount"`
				HeartCount     int `json:"heartCount"`
				VideoCount     int `json:"videoCount"`
				DiggCount      int `json:"diggCount"`
				Heart          int `json:"heart"`
			} `json:"authorStats"`
			PrivateItem   bool `json:"privateItem"`
			DuetEnabled   bool `json:"duetEnabled"`
			StitchEnabled bool `json:"stitchEnabled"`
			ShareEnabled  bool `json:"shareEnabled"`
			IsAd          bool `json:"isAd"`
			Collected     bool `json:"collected"`
		} `json:"item,omitempty"`
	} `json:"data"`
	Qc      string `json:"qc"`
	Cursor  int    `json:"cursor"`
	HasMore int    `json:"has_more"`
	AdInfo  struct {
	} `json:"ad_info"`
	Extra struct {
		Now             int64  `json:"now"`
		Logid           string `json:"logid"`
		FatalItemIds    []any  `json:"fatal_item_ids"`
		SearchRequestID string `json:"search_request_id"`
		APIDebugInfo    any    `json:"api_debug_info"`
	} `json:"extra"`
	LogPb struct {
		ImprID string `json:"impr_id"`
	} `json:"log_pb"`
	GlobalDoodleConfig struct {
		FeedbackSurvey any `json:"feedback_survey"`
	} `json:"global_doodle_config"`
	Backtrace string `json:"backtrace"`
}

type ResponseApiTiktok struct {
	StatusCode int `json:"status_code"`
	Data       []struct {
		Type int `json:"type"`
		Item struct {
			ID         string `json:"id"`
			Desc       string `json:"desc"`
			CreateTime int    `json:"createTime"`
			Video      struct {
				ID            string   `json:"id"`
				Height        int      `json:"height"`
				Width         int      `json:"width"`
				Duration      int      `json:"duration"`
				Ratio         string   `json:"ratio"`
				Cover         string   `json:"cover"`
				OriginCover   string   `json:"originCover"`
				DynamicCover  string   `json:"dynamicCover"`
				PlayAddr      string   `json:"playAddr"`
				DownloadAddr  string   `json:"downloadAddr"`
				ShareCover    []string `json:"shareCover"`
				ReflowCover   string   `json:"reflowCover"`
				Bitrate       int      `json:"bitrate"`
				EncodedType   string   `json:"encodedType"`
				Format        string   `json:"format"`
				VideoQuality  string   `json:"videoQuality"`
				EncodeUserTag string   `json:"encodeUserTag"`
			} `json:"video"`
			Author struct {
				ID              string `json:"id"`
				UniqueID        string `json:"uniqueId"`
				Nickname        string `json:"nickname"`
				AvatarThumb     string `json:"avatarThumb"`
				AvatarMedium    string `json:"avatarMedium"`
				AvatarLarger    string `json:"avatarLarger"`
				Signature       string `json:"signature"`
				Verified        bool   `json:"verified"`
				SecUID          string `json:"secUid"`
				Secret          bool   `json:"secret"`
				Ftc             bool   `json:"ftc"`
				Relation        int    `json:"relation"`
				OpenFavorite    bool   `json:"openFavorite"`
				CommentSetting  int    `json:"commentSetting"`
				DuetSetting     int    `json:"duetSetting"`
				StitchSetting   int    `json:"stitchSetting"`
				PrivateAccount  bool   `json:"privateAccount"`
				DownloadSetting int    `json:"downloadSetting"`
			} `json:"author"`
			Music struct {
				ID          string `json:"id"`
				Title       string `json:"title"`
				PlayURL     string `json:"playUrl"`
				CoverThumb  string `json:"coverThumb"`
				CoverMedium string `json:"coverMedium"`
				CoverLarge  string `json:"coverLarge"`
				AuthorName  string `json:"authorName"`
				Original    bool   `json:"original"`
				Duration    int    `json:"duration"`
				Album       string `json:"album"`
			} `json:"music"`
			Challenges []struct {
				ID            string `json:"id"`
				Title         string `json:"title"`
				Desc          string `json:"desc"`
				ProfileThumb  string `json:"profileThumb"`
				ProfileMedium string `json:"profileMedium"`
				ProfileLarger string `json:"profileLarger"`
				CoverThumb    string `json:"coverThumb"`
				CoverMedium   string `json:"coverMedium"`
				CoverLarger   string `json:"coverLarger"`
				IsCommerce    bool   `json:"isCommerce"`
			} `json:"challenges"`
			Stats struct {
				DiggCount    int `json:"diggCount"`
				ShareCount   int `json:"shareCount"`
				CommentCount int `json:"commentCount"`
				PlayCount    int `json:"playCount"`
				CollectCount int `json:"collectCount"`
			} `json:"stats"`
		}
	}
	Cursor  int `json:"cursor"`
	HasMore int `json:"has_more"`
}

type VideoData struct {
	ID        string    `json:"id"`
	URL       string    `json:"url"`
	Title     string    `json:"title"`
	Author    string    `json:"author"`
	CachedAt  time.Time `json:"cached_at"`
	ExpiresAt time.Time `json:"expires_at"`
}

func DecodeJson(result []byte, c *caches.InMemoryCache) (videoJson ResponseApiTiktok, err error) {

	err = json.Unmarshal(result, &videoJson)
	if err != nil {
		log.Error().Err(err).Send()
		return
	}

	for i, v := range videoJson.Data {

		if v.Type == 4 {
			videoJson.Data[i] = struct {
				Type int "json:\"type\""
				Item struct {
					ID         string "json:\"id\""
					Desc       string "json:\"desc\""
					CreateTime int    "json:\"createTime\""
					Video      struct {
						ID            string   "json:\"id\""
						Height        int      "json:\"height\""
						Width         int      "json:\"width\""
						Duration      int      "json:\"duration\""
						Ratio         string   "json:\"ratio\""
						Cover         string   "json:\"cover\""
						OriginCover   string   "json:\"originCover\""
						DynamicCover  string   "json:\"dynamicCover\""
						PlayAddr      string   "json:\"playAddr\""
						DownloadAddr  string   "json:\"downloadAddr\""
						ShareCover    []string "json:\"shareCover\""
						ReflowCover   string   "json:\"reflowCover\""
						Bitrate       int      "json:\"bitrate\""
						EncodedType   string   "json:\"encodedType\""
						Format        string   "json:\"format\""
						VideoQuality  string   "json:\"videoQuality\""
						EncodeUserTag string   "json:\"encodeUserTag\""
					} "json:\"video\""
					Author struct {
						ID              string "json:\"id\""
						UniqueID        string "json:\"uniqueId\""
						Nickname        string "json:\"nickname\""
						AvatarThumb     string "json:\"avatarThumb\""
						AvatarMedium    string "json:\"avatarMedium\""
						AvatarLarger    string "json:\"avatarLarger\""
						Signature       string "json:\"signature\""
						Verified        bool   "json:\"verified\""
						SecUID          string "json:\"secUid\""
						Secret          bool   "json:\"secret\""
						Ftc             bool   "json:\"ftc\""
						Relation        int    "json:\"relation\""
						OpenFavorite    bool   "json:\"openFavorite\""
						CommentSetting  int    "json:\"commentSetting\""
						DuetSetting     int    "json:\"duetSetting\""
						StitchSetting   int    "json:\"stitchSetting\""
						PrivateAccount  bool   "json:\"privateAccount\""
						DownloadSetting int    "json:\"downloadSetting\""
					} "json:\"author\""
					Music struct {
						ID          string "json:\"id\""
						Title       string "json:\"title\""
						PlayURL     string "json:\"playUrl\""
						CoverThumb  string "json:\"coverThumb\""
						CoverMedium string "json:\"coverMedium\""
						CoverLarge  string "json:\"coverLarge\""
						AuthorName  string "json:\"authorName\""
						Original    bool   "json:\"original\""
						Duration    int    "json:\"duration\""
						Album       string "json:\"album\""
					} "json:\"music\""
					Challenges []struct {
						ID            string "json:\"id\""
						Title         string "json:\"title\""
						Desc          string "json:\"desc\""
						ProfileThumb  string "json:\"profileThumb\""
						ProfileMedium string "json:\"profileMedium\""
						ProfileLarger string "json:\"profileLarger\""
						CoverThumb    string "json:\"coverThumb\""
						CoverMedium   string "json:\"coverMedium\""
						CoverLarger   string "json:\"coverLarger\""
						IsCommerce    bool   "json:\"isCommerce\""
					} "json:\"challenges\""
					Stats struct {
						DiggCount    int "json:\"diggCount\""
						ShareCount   int "json:\"shareCount\""
						CommentCount int "json:\"commentCount\""
						PlayCount    int "json:\"playCount\""
						CollectCount int "json:\"collectCount\""
					} "json:\"stats\""
				}
			}{}

		}

		err = c.Set(v.Item.Video.ID, &VideoData{
			ID:        v.Item.Video.ID,
			URL:       v.Item.Video.PlayAddr,
			Title:     v.Item.Desc,
			Author:    v.Item.Author.UniqueID,
			CachedAt:  time.Now(),
			ExpiresAt: time.Now().Add(constants.TIME_EXPIRED),
		}, constants.TIME_EXPIRED)

		if err != nil {
			log.Error().Err(err).Send()
			return
		}
	}

	return
}
